/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUIComponents;

import Managers.*;
import Objetos.*;
import Utils.GUIUtils.PanelGUIHandler;
import Utils.GUIUtils.SMenuGUIHandler;
import Utils.TableGenerator.CoberturaTableGenerator;
import Utils.TableGenerator.ProfesionalTableGenerator;

import java.awt.*;
import java.awt.event.*;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.*;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableColumnModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

/**
 *
 * @author Juan
 */
public class ActualizarPreciosOS extends Panel {

    List<ObraSocial> ObraSocialList;
    private TableColumn idsObraSocial;
    private TableColumn idsPrestacion;
    private static ActualizarPreciosOS actualizarPreciosOS;

    public static ActualizarPreciosOS getInstance(){
        if(actualizarPreciosOS==null){
            actualizarPreciosOS= new ActualizarPreciosOS();
        }
        return actualizarPreciosOS;
    }
    /**
     * Creates new form ActualizarPreciosOS
     */
    private ActualizarPreciosOS() {
        initComponents();
        
        //carga de combobox
        leeCB();

        //actualizacion de tabla
        leerTablaOS();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ObraSocialCB = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        obraSocialJT = new javax.swing.JTable();
        volverButton = new javax.swing.JLabel();

        setBackground(new java.awt.Color(223, 246, 255));

        ObraSocialCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecciona una opcion" }));
        ObraSocialCB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ObraSocialCBMousePressed(evt);
            }
        });

        obraSocialJT.setBackground(new java.awt.Color(223, 246, 255));
        obraSocialJT.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        obraSocialJT.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                obraSocialJTKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(obraSocialJT);

        volverButton.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        volverButton.setText("Volver");
        volverButton.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        volverButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        volverButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                volverButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                volverButtonMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                volverButtonMousePressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(331, 331, 331)
                .addComponent(ObraSocialCB, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(361, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(volverButton, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(ObraSocialCB, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 443, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(volverButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void ObraSocialCBMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ObraSocialCBMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_ObraSocialCBMousePressed

    private void volverButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_volverButtonMouseEntered
        volverButton.setOpaque(true);
        volverButton.setBackground(new Color (150, 231, 255) );
    }//GEN-LAST:event_volverButtonMouseEntered

    private void volverButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_volverButtonMouseExited
        volverButton.setBackground(new Color (223, 246, 255) );
    }//GEN-LAST:event_volverButtonMouseExited

    private void volverButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_volverButtonMousePressed
        volverButton.setBackground(new Color (223, 246, 255) );
        PanelGUIHandler.getinstance().changePanel(PanelGUIHandler.actualizarPrecios,null);
        SMenuGUIHandler.getInstance().changePanel(SMenuGUIHandler.menuSecundarioVacio,null);
    }//GEN-LAST:event_volverButtonMousePressed

    private void obraSocialJTKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_obraSocialJTKeyTyped
        
    }//GEN-LAST:event_obraSocialJTKeyTyped

    private void leerTablaOS() {

        obraSocialJT.setDefaultRenderer(Object.class, new MiRenderizador());
        obraSocialJT.setDefaultEditor(Object.class, new DefaultCellEditor(new JTextField()) {
            {
                getComponent().addKeyListener(new KeyAdapter() {
                    public void keyPressed(KeyEvent e) {
                        if (e.getKeyChar() == '\n') {
                            if (obraSocialJT.isEditing()) {
                                obraSocialJT.getCellEditor().stopCellEditing();
                            }

                            int filaSeleccionada = obraSocialJT.getSelectedRow();

                            if (filaSeleccionada != -1) {
                                // Verifica si se ha seleccionado una fila
                                DefaultTableModel modelo = (DefaultTableModel) obraSocialJT.getModel();

                                // Obt√©n los valores de la fila seleccionada
                                String porcentajeStr = modelo.getValueAt(filaSeleccionada, 1).toString();
                                String prestacion = modelo.getValueAt(filaSeleccionada, 0).toString();
                                String topeStr = modelo.getValueAt(filaSeleccionada, 2).toString();
                                String codigo = modelo.getValueAt(filaSeleccionada, 3).toString();

                                String regex1 = "^(0*(?:100(?:\\.0+)?|\\d{0,2}(?:\\.\\d+)?)|100(?:\\.0+)?)$";
                                String regex2 = "^[1-9]\\d*(\\.\\d{1,2})?$";

                                if (porcentajeStr.matches(regex1)) {
                                    float porcentaje = Float.parseFloat(porcentajeStr);

                                    if (topeStr.matches(regex2)) {
                                        float tope = Float.parseFloat(topeStr);

                                        Cobertura cobertura = new Cobertura();
                                        Cobertura aux = new Cobertura();

                                        aux.setCodigo(codigo);
                                        aux.setTope(tope);
                                        aux.setPorcentaje(porcentaje);
                                        ObraSocial os = ObraSocialList.get(ObraSocialCB.getSelectedIndex()-1);
                                        aux.setIdObraSocial(os.getId());
                                        cobertura.setIdObraSocial(os.getId());
                                        obraSocialJT.addColumn(idsPrestacion);
                                        Prestacion pr = PrestacionManager.getInstance().getById(Integer.parseInt(obraSocialJT.getValueAt(filaSeleccionada,4).toString()));
                                        obraSocialJT.removeColumn(idsPrestacion);
                                        aux.setIdPrestacion(pr.getId());
                                        cobertura.setIdPrestacion(pr.getId());

                                        boolean result = CoberturaManager.getInstance().modify(cobertura, aux);
                                        if (result) {
                                            DefaultTableModel tableModel = (DefaultTableModel) obraSocialJT.getModel();
                                            tableModel.setRowCount(0); // Elimina todos los datos de la tabla

                                            // Agrega nuevos datos a la tabla seg√∫n la opci√≥n seleccionada en el JComboBox
                                            ObraSocial obrasocial = ObraSocialList.get(ObraSocialCB.getSelectedIndex()-1);

                                            JTable auxTable = CoberturaTableGenerator.getInstance().generateTable(obrasocial);
                                            obraSocialJT.setModel(auxTable.getModel());
                                            removeColumn();
                                        } else {
                                            JOptionPane.showMessageDialog(ActualizarPreciosOS.getInstance(), "Ocurri√≥ un error intentando modificar la cobertura.", "Error", JOptionPane.WARNING_MESSAGE);

                                            
                                        }
                                    } else {
                                        JOptionPane.showMessageDialog(ActualizarPreciosOS.getInstance(), "El Tope introducido es incorrecto.\nDebe ser un n√∫mero entero mayor o igual a 0 con hasta dos decimales.", "Error", JOptionPane.WARNING_MESSAGE);

                                        modelo.setValueAt(ActualizarPreciosOS.getInstance(), filaSeleccionada, 2); // Columna del Tope
                                    }
                                } else {
                                    JOptionPane.showMessageDialog(null, "El porcentaje introducido es incorrecto.\nDebe ser un n√∫mero entero mayor o igual a 0 y menor o igual a 100.", "Error", JOptionPane.WARNING_MESSAGE);

                                    modelo.setValueAt(ActualizarPreciosOS.getInstance(), filaSeleccionada, 1); // Columna del Porcentaje
                                }
                            }
                        }
                    }
                });
            }
        });
    }

    private void removeColumn(){
        DefaultTableColumnModel tcm = (DefaultTableColumnModel)obraSocialJT.getColumnModel();
        idsObraSocial = tcm.getColumn(4);
        idsPrestacion = tcm.getColumn(5);
        tcm.removeColumn(tcm.getColumn(4));
        tcm.removeColumn(tcm.getColumn(4));
    }


    public class MiRenderizador extends DefaultTableCellRenderer {
        @Override
        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
            super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
            if (isSelected) {
                setBorder(BorderFactory.createMatteBorder(2, 2, 2, 2, Color.BLUE)); // Cambia el color y el tama√±o del borde como prefieras
            } else {
                setBorder(noFocusBorder);
            }
            return this;
        }
    }

    public void leeCB(){
        ObraSocialCB.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {

                DefaultTableModel tableModel = (DefaultTableModel) obraSocialJT.getModel();
                tableModel.setRowCount(0); // Elimina todos los datos de la tabla

                // Agrega nuevos datos a la tabla seg√∫n la opci√≥n seleccionada en el JComboBox
                if(ObraSocialCB.getSelectedIndex()!=0){
                    ObraSocial obrasocial = ObraSocialList.get(ObraSocialCB.getSelectedIndex()-1);
                    JTable auxTable = CoberturaTableGenerator.getInstance().generateTable(obrasocial);
                    obraSocialJT.setModel(auxTable.getModel());
                    ActualizarPreciosOS.getInstance().removeColumn();
                    obraSocialJT.setRowHeight(25);


                }
                else{
                    JTable auxTable = CoberturaTableGenerator.getInstance().generateTable(null);
                    obraSocialJT.setModel(auxTable.getModel());
                    ActualizarPreciosOS.getInstance().removeColumn();
                    obraSocialJT.setRowHeight(25);
                }

            }
        });
    }

    @Override
    public void setup(List<Object> arguments) {

        ObraSocialList = ObraSocialManager.getInstance().getAll();
        ComboBoxModel<String> cb = new DefaultComboBoxModel<>();
        ObraSocialCB.setModel(cb);
        ObraSocialCB.addItem("Ingrese una opcion");
        for (int i=1;i<=ObraSocialList.size();i++) {
            ObraSocialCB.insertItemAt(ObraSocialList.get(i-1).getNombre(),i);
        }

        JTable auxTalble = CoberturaTableGenerator.getInstance().generateTable(null);
        obraSocialJT.setModel(auxTalble.getModel());
        this.removeColumn();
        ObraSocialCB.setSelectedIndex(0);
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> ObraSocialCB;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable obraSocialJT;
    private javax.swing.JLabel volverButton;
    // End of variables declaration//GEN-END:variables


}
