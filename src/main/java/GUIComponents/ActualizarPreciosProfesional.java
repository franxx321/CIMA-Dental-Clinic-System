/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUIComponents;

import Managers.GastoManager;
import Managers.TurnoManager;
import Managers.ProfesionalManager;
import Objetos.Profesional;
import Utils.GUIUtils.PanelGUIHandler;
import Utils.GUIUtils.SMenuGUIHandler;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.List;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import Utils.TableGenerator.ProfesionalTableGenerator;
import java.awt.Color;

/**
 *
 * @author Juan
 */
public class ActualizarPreciosProfesional extends Panel {
    
    private static ActualizarPreciosProfesional actualizarPreciosProfesional;

    public static ActualizarPreciosProfesional getInstance(){
        if(actualizarPreciosProfesional==null){
            actualizarPreciosProfesional= new ActualizarPreciosProfesional();
        }
        return actualizarPreciosProfesional;
    }
    /**
     * Creates new form ActualizarListaPrecios
     */
    private ActualizarPreciosProfesional() {
        initComponents();
        //carga de combobox
        List<Profesional> allProfesional = ProfesionalManager.getInstance().getAll();
        for (Profesional profesional: allProfesional){
            profesionalCB.addItem(profesional.getNombre());
        }
        
        //actualizacion de tabla
        profesionalCB.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                
                DefaultTableModel tableModel = (DefaultTableModel) profesionalJT.getModel();
                tableModel.setRowCount(0); // Elimina todos los datos de la tabla

                // Agrega nuevos datos a la tabla según la opción seleccionada en el JComboBox
                String selectedOption = profesionalCB.getSelectedItem().toString();
                Profesional profesional = ProfesionalManager.getInstance().getProfesionalByName(selectedOption);
                
                JTable auxTable = ProfesionalTableGenerator.getInstance().generateTable(profesional);
                profesionalJT.setModel(auxTable.getModel());
            }
        });
        
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        profesionalCB = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        profesionalJT = new javax.swing.JTable();
        volverButton = new javax.swing.JLabel();

        setBackground(new java.awt.Color(223, 246, 255));
        setPreferredSize(new java.awt.Dimension(970, 637));

        profesionalCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecciona una opcion" }));
        profesionalCB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                profesionalCBMousePressed(evt);
            }
        });

        profesionalJT.setBackground(new java.awt.Color(223, 246, 255));
        profesionalJT.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(profesionalJT);

        volverButton.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        volverButton.setText("Volver");
        volverButton.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        volverButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                volverButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                volverButtonMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                volverButtonMousePressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(layout.createSequentialGroup()
                .addGap(324, 324, 324)
                .addComponent(profesionalCB, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(368, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(volverButton, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(64, 64, 64))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addComponent(profesionalCB, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 443, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(volverButton, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void profesionalCBMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_profesionalCBMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_profesionalCBMousePressed

    private void volverButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_volverButtonMouseEntered
        volverButton.setOpaque(true);
        volverButton.setBackground(new Color (150, 231, 255) ); 
    }//GEN-LAST:event_volverButtonMouseEntered

    private void volverButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_volverButtonMouseExited
        volverButton.setBackground(new Color (223, 246, 255) );
    }//GEN-LAST:event_volverButtonMouseExited

    private void volverButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_volverButtonMousePressed
        PanelGUIHandler.getinstance().changePanel(PanelGUIHandler.actualizarPrecios,null);
        SMenuGUIHandler.getInstance().changePanel(SMenuGUIHandler.menuSecundarioVacio,null);
    }//GEN-LAST:event_volverButtonMousePressed

    @Override
    public void setup(List<Object> arguments) {
        
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> profesionalCB;
    private javax.swing.JTable profesionalJT;
    private javax.swing.JLabel volverButton;
    // End of variables declaration//GEN-END:variables
}
