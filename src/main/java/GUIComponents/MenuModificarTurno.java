/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUIComponents;

import Managers.PacienteManager;
import Managers.TurnoManager;
import Objetos.Paciente;
import Objetos.Profesional;
import Objetos.Turno;
import Utils.Exceptions.CantAddTurno;
import Utils.FormatedDate;
import Utils.GUIUtils.PanelGUIHandler;
import Utils.GUIUtils.SMenuGUIHandler;
import Utils.TableGenerator.CalendarTableGenerator;
import java.awt.Color;
import org.jdatepicker.impl.DateComponentFormatter;
import org.jdatepicker.impl.JDatePanelImpl;
import org.jdatepicker.impl.JDatePickerImpl;
import org.jdatepicker.impl.UtilDateModel;


import javax.swing.*;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Properties;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

/**
 *
 * @author franc
 */
public class MenuModificarTurno extends Panel {

    //IMPORTANTE datepicker necesita un datepanel, que necesita un datemodel, la inicializacion de los mismos esta en el constructor
    // link de instruccion : https://www.codejava.net/java-se/swing/how-to-use-jdatepicker-to-display-calendar-component
    private JDatePickerImpl datePicker;
    private JDatePanelImpl datePanel;
    private UtilDateModel model;
    private int week =0;
    private Turno turno;
    Profesional profesional = null;
    
    

    private static MenuModificarTurno modificarTurno;

    public static MenuModificarTurno getInstance(){
        if(modificarTurno==null){
            modificarTurno=new MenuModificarTurno();
        }
        return modificarTurno;
    }

    private void modifyCalendar(){
        JTable table = TurnoManager.getInstance().getCalendar(profesional,week);
        calendarTable.setModel(table.getModel());
        calendarTable.setDefaultRenderer(Object.class,table.getDefaultRenderer(Object.class));
        this.repaint();
        this.revalidate();
    }
    
    

    /**
     * Creates new form ModificarTurno
     */
    private MenuModificarTurno() {
        initComponents();
        model= new UtilDateModel();
        //IMPORTANTE a partir de la version 1.3.4 de JDatePicker se necesita darle properties al DatePanel
        // link: https://stackoverflow.com/questions/26794698/how-do-i-implement-jdatepicker
        Properties p = new Properties();
        p.put("text.today", "Today");
        p.put("text.month", "Month");
        p.put("text.year", "Year");
        datePanel=new JDatePanelImpl(model,p);
        datePicker = new JDatePickerImpl(datePanel, new DateComponentFormatter());
        datePickerPanel.add(datePicker);
    }


    @Override
    public void setup(List<Object> arguments) {
        week =0;
        turno= (Turno) arguments.get(0);
        List<Profesional> allProfesional = TurnoManager.getInstance().getAllProfesional();
        List<Paciente> allPaciente = PacienteManager.getInstance().getAll();
        for (Profesional profesional1 : allProfesional){
            if (profesional1.getId() == turno.getIdProfesional()){
                profesional = profesional1;
                break;
            }
        }
        for (Paciente paciente1 : allPaciente){
            if (paciente1.getId() == turno.getIdPaciente()){
                pacienteLabel.setText(paciente1.getNombre());
                break;
            }
        }
        model.setDate(turno.getHoraFin().getYear()+1900, turno.getHoraFin().getMonth(),turno.getHoraFin().getDate());
        model.setSelected(true);
        Date date = (Date)datePicker.getModel().getValue();
        profesionalLabel.setText(profesional.getNombre());
        horaFinTF.setText(turno.getHoraFin().getHours()+ ":"+ turno.getHoraFin().getMinutes());
        horaInicioTF.setText(turno.getHoraInicio().getHours()+ ":"+ turno.getHoraInicio().getMinutes());
        descuentoTF.setText(String.valueOf(turno.getDescuento()));
        precioTextField.setText(String.valueOf(turno.getValor()));
        this.modifyCalendar();
        asistioCheckBox.setSelected(turno.isAsistio());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        calendarTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        horaInicioTF = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        horaFinTF = new javax.swing.JTextField();
        configurarPrestacionesButton = new javax.swing.JLabel();
        profesionalLabel = new javax.swing.JLabel();
        pacienteLabel = new javax.swing.JLabel();
        flechaIzqButton = new javax.swing.JLabel();
        cancelarButton = new javax.swing.JLabel();
        confirmarButton = new javax.swing.JLabel();
        flechaDerechaButton = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        descuentoTF = new javax.swing.JTextField();
        asistioCheckBox = new javax.swing.JCheckBox();
        jLabel7 = new javax.swing.JLabel();
        datePickerPanel = new javax.swing.JPanel();
        precioTextField = new javax.swing.JTextField();

        setBackground(new java.awt.Color(223, 246, 255));

        jScrollPane1.setBackground(new java.awt.Color(223, 246, 255));

        calendarTable.setBackground(new java.awt.Color(223, 244, 255));
        calendarTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(calendarTable);

        jLabel1.setText("Profesional: ");

        jLabel2.setText("Paciente:");

        jLabel6.setText("Fecha: ");

        jLabel4.setText("Hora de inicio:");

        jLabel5.setText("Hora de fin:");

        configurarPrestacionesButton.setText("  Configurar prestaciones");
        configurarPrestacionesButton.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        configurarPrestacionesButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        configurarPrestacionesButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                configurarPrestacionesButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                configurarPrestacionesButtonMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                configurarPrestacionesButtonMousePressed(evt);
            }
        });

        profesionalLabel.setText("Profesional");

        pacienteLabel.setText("Paciente");

        flechaIzqButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/left-arrow 24x24.png"))); // NOI18N
        flechaIzqButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        flechaIzqButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                flechaIzqButtonMousePressed(evt);
            }
        });

        cancelarButton.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cancelarButton.setText("Cancelar");
        cancelarButton.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        cancelarButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cancelarButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                cancelarButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                cancelarButtonMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                cancelarButtonMousePressed(evt);
            }
        });

        confirmarButton.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        confirmarButton.setText("Confirmar");
        confirmarButton.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        confirmarButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        confirmarButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                confirmarButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                confirmarButtonMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                confirmarButtonMousePressed(evt);
            }
        });

        flechaDerechaButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/right-arrow 24x24.png"))); // NOI18N
        flechaDerechaButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        flechaDerechaButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                flechaDerechaButtonMousePressed(evt);
            }
        });

        jLabel3.setText("Precio:");

        jLabel10.setText("Descuento:");

        asistioCheckBox.setText("Asistio");
        asistioCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                asistioCheckBoxActionPerformed(evt);
            }
        });

        jLabel7.setText("%");

        datePickerPanel.setBackground(new java.awt.Color(223, 246, 255));
        datePickerPanel.setPreferredSize(new java.awt.Dimension(100, 29));
        datePickerPanel.setLayout(new java.awt.CardLayout());

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(profesionalLabel)
                            .addComponent(jLabel2)
                            .addComponent(asistioCheckBox)
                            .addComponent(pacienteLabel)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(flechaIzqButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 144, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(configurarPrestacionesButton, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(datePickerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(482, 482, 482))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(precioTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(cancelarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(confirmarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(flechaDerechaButton)
                                .addContainerGap())
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(descuentoTF, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel10))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(horaFinTF, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(horaInicioTF, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel5)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel7)))
                                .addGap(93, 93, 93))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel1)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(profesionalLabel)
                        .addComponent(horaInicioTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(datePickerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(pacienteLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(configurarPrestacionesButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(horaFinTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(asistioCheckBox)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(descuentoTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel7)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(flechaIzqButton, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(flechaDerechaButton)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(confirmarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(precioTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cancelarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void configurarPrestacionesButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_configurarPrestacionesButtonMousePressed
        List<Object> arguments = new ArrayList<>();
        arguments.add(turno);
        PanelGUIHandler.getinstance().changePanel(PanelGUIHandler.modificarPrestacion,arguments);
    }//GEN-LAST:event_configurarPrestacionesButtonMousePressed

    private void cancelarButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelarButtonMousePressed
        cancelarButton.setBackground(new Color (223, 246, 255) );
        PanelGUIHandler.getinstance().changePanel(PanelGUIHandler.panelTurnos,null);
        SMenuGUIHandler.getInstance().changePanel(SMenuGUIHandler.menuSecundarioVacio,null);
    }//GEN-LAST:event_cancelarButtonMousePressed

    private void confirmarButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_confirmarButtonMousePressed
        Turno newTurno = new Turno();
        boolean asistio = asistioCheckBox.isSelected();
        float descuento = Float.parseFloat(descuentoTF.getText());
        boolean error = false;
        String errorString="";
        float valor = Float.parseFloat(precioTextField.getText());
        Date fecha = FormatedDate.formatedDate((Date) datePicker.getModel().getValue());
        String horaInicioString = horaInicioTF.getText().trim();
        String horaFinString = horaFinTF.getText().trim();
        long milisegundos = fecha.getTime();
        long horaInicioEnMilisegundos=0;
        long horafinEnMilisegundos=0;
        if(descuento < 0 ){
            error = true;
            descuentoTF.setText("");
            errorString = errorString+"No se puede aplicar un descuento negativo.\n";
        }else if(descuento > 100){
            error = true;
            descuentoTF.setText("");
            errorString = errorString+"No se puede aplicar un descuento mayor a 100.\n";
        }

        Pattern patron = Pattern.compile("^([01]?[0-9]|2[0-3])([:.][0-5]?[0-9])$");

        Matcher matcher1 = patron.matcher(horaInicioString);
        if (matcher1.matches()) {
            int hora1= Integer.parseInt(matcher1.group(1));
            int minutos1= Integer.parseInt(matcher1.group(2));
            horaInicioEnMilisegundos = ((long) hora1 * 60 * 60 * 1000) + ((long) minutos1 * 60 * 1000);
        }else {
            error = true;
            horaInicioTF.setText("");
            errorString = errorString+"Hora de inicio incorrecta.\n";
        }

        Matcher matcher2 = patron.matcher(horaFinString);
        if (matcher2.matches()) {
            int hora2= Integer.parseInt(matcher2.group(1));
            int minutos2= Integer.parseInt(matcher2.group(2));
            horafinEnMilisegundos = ((long) hora2 * 60 * 60 * 1000) + ((long) minutos2 * 60 * 1000);
        }else{

            error = true;
            horaFinTF.setText("");
            errorString = errorString+"Hora de fin incorrecta.\n";
        }

        if(error){
            JOptionPane.showMessageDialog(this, "Error!\n" + errorString, "Error", JOptionPane.WARNING_MESSAGE);
        }else{
            horaInicioEnMilisegundos +=milisegundos;
            horafinEnMilisegundos +=milisegundos;
            Date horaInicio = new Date(horaInicioEnMilisegundos);
            Date horaFin = new Date(horafinEnMilisegundos);
            newTurno.setAsistio(asistio);
            newTurno.setHoraInicio(horaInicio);
            newTurno.setHoraFin(horaFin);
            newTurno.setDescuento(descuento);
            newTurno.setValor(valor);
            try{
                TurnoManager.getInstance().modifyTurno(turno,newTurno);
                JOptionPane.showMessageDialog(this, "El turno fue modificado correctamente");
                confirmarButton.setBackground(new Color (223, 246, 255) );
                PanelGUIHandler.getinstance().changePanel(PanelGUIHandler.panelTurnos,null);
                SMenuGUIHandler.getInstance().changePanel(SMenuGUIHandler.menuSecundarioVacio,null);
            }
            catch (CantAddTurno e){
                JOptionPane.showMessageDialog(this, "Error!\n" + e.getErrors(), "Error", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_confirmarButtonMousePressed

    private void flechaDerechaButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_flechaDerechaButtonMousePressed
        week++;
        this.modifyCalendar();

    }//GEN-LAST:event_flechaDerechaButtonMousePressed

    private void flechaIzqButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_flechaIzqButtonMousePressed
        if (week >0){
            week--;
            this.modifyCalendar();
        }
    }//GEN-LAST:event_flechaIzqButtonMousePressed

    private void asistioCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_asistioCheckBoxActionPerformed

    }//GEN-LAST:event_asistioCheckBoxActionPerformed

    private void cancelarButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelarButtonMouseEntered
       cancelarButton.setOpaque(true);
       cancelarButton.setBackground(new Color (255, 105, 97) ); 
    }//GEN-LAST:event_cancelarButtonMouseEntered

    private void cancelarButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelarButtonMouseExited
        cancelarButton.setBackground(new Color (223, 246, 255) ); 
    }//GEN-LAST:event_cancelarButtonMouseExited

    private void confirmarButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_confirmarButtonMouseEntered
        confirmarButton.setOpaque(true);
        confirmarButton.setBackground(new Color (152, 251, 152) ); 
    }//GEN-LAST:event_confirmarButtonMouseEntered

    private void confirmarButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_confirmarButtonMouseExited
       confirmarButton.setBackground(new Color (223, 246, 255) );
    }//GEN-LAST:event_confirmarButtonMouseExited

    private void configurarPrestacionesButtonMouseEntered(MouseEvent evt) {//GEN-FIRST:event_configurarPrestacionesButtonMouseEntered
        configurarPrestacionesButton.setOpaque(true);
        configurarPrestacionesButton.setBackground(new Color (150, 231, 255) );
    }//GEN-LAST:event_configurarPrestacionesButtonMouseEntered

    private void configurarPrestacionesButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_configurarPrestacionesButtonMouseExited
        configurarPrestacionesButton.setBackground(new Color (223, 246, 255) );
    }//GEN-LAST:event_configurarPrestacionesButtonMouseExited


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox asistioCheckBox;
    private javax.swing.JTable calendarTable;
    private javax.swing.JLabel cancelarButton;
    private javax.swing.JLabel configurarPrestacionesButton;
    private javax.swing.JLabel confirmarButton;
    private javax.swing.JPanel datePickerPanel;
    private javax.swing.JTextField descuentoTF;
    private javax.swing.JLabel flechaDerechaButton;
    private javax.swing.JLabel flechaIzqButton;
    private javax.swing.JTextField horaFinTF;
    private javax.swing.JTextField horaInicioTF;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel pacienteLabel;
    private javax.swing.JTextField precioTextField;
    private javax.swing.JLabel profesionalLabel;
    // End of variables declaration//GEN-END:variables
}
