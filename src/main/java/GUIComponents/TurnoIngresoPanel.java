/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUIComponents;

import Managers.IngresoManager;
import Managers.TurnoManager;
import Objetos.Profesional;
import Objetos.Turno;
import Utils.GUIUtils.PanelGUIHandler;
import Utils.String2Date;
import java.awt.Color;

import javax.swing.*;
import javax.swing.table.DefaultTableColumnModel;
import javax.swing.table.TableColumn;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

/**
 *
 * @author franc
 */
public class TurnoIngresoPanel extends Panel {

    private  List<Profesional> profesionales;

    private TableColumn idsTurnos;


    private static  TurnoIngresoPanel turnoIngresoPanel;

    public static TurnoIngresoPanel getInstance(){
        if(turnoIngresoPanel==null){
            turnoIngresoPanel= new TurnoIngresoPanel();
        }
        return turnoIngresoPanel;
    }

    /**
     * Creates new form turnoIngresoPanel
     */
    private TurnoIngresoPanel() {
        initComponents();
    }

    @Override
    public void setup(List<Object> arguments) {
        //TODO modificar la eleccion de profesional como en agregar turno
        profesionales = IngresoManager.getInstance().getAllProfesional();
        ComboBoxModel<String> cb = new DefaultComboBoxModel<>();
        profesionalCB.setModel(cb);
        profesionalCB.addItem("Ingrese una opcion");
        for (int i=1;i<=profesionales.size();i++) {
            profesionalCB.insertItemAt(profesionales.get(i-1).getNombre(),i);
        }
        JTable auxTable = IngresoManager.getInstance().getTurnosByProfesionalTable(null);
        jTable1.setModel(auxTable.getModel());
        this.removeColumn();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        profesionalCB = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        confirmarButton = new javax.swing.JLabel();

        setBackground(new java.awt.Color(223, 246, 255));

        jLabel1.setText("Profesional: ");

        profesionalCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione una opcion" }));
        profesionalCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                profesionalCBActionPerformed(evt);
            }
        });

        jScrollPane1.setBackground(new java.awt.Color(223, 246, 255));
        jScrollPane1.setOpaque(false);

        jTable1.setBackground(new java.awt.Color(223, 246, 255));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        confirmarButton.setText("  Confirmar");
        confirmarButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        confirmarButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                confirmarButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                confirmarButtonMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                confirmarButtonMousePressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 895, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(profesionalCB, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(388, 388, 388)
                .addComponent(confirmarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(profesionalCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 461, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(confirmarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void confirmarButtonMousePressed(MouseEvent evt) {//GEN-FIRST:event_confirmarButtonMousePressed
        boolean error =false;
        String errString = "";
        if(profesionalCB.getSelectedIndex()==0){
            error= true;
            errString= "\n seleccione un profesional";
            System.out.println("error");
        }
        else if(jTable1.getSelectedRow() ==-1){
            error = true;
            errString = "\n Seleccione un turno";
        }
        if(error){
            JOptionPane.showMessageDialog(this, "Error!\n" + errString);

        }
        else {
            int row = jTable1.getSelectedRow();
            jTable1.addColumn(idsTurnos);
            Turno turno = TurnoManager.getInstance().getById(Integer.parseInt(jTable1.getValueAt(row,5).toString()));
            jTable1.removeColumn(idsTurnos);
            List<Object> arguments = new ArrayList<>();
            arguments.add(turno);
            confirmarButton.setBackground(new Color (223, 246, 255) );
            PanelGUIHandler.getinstance().changePanel(PanelGUIHandler.agregarIngreso,arguments);
        }
    }//GEN-LAST:event_confirmarButtonMousePressed

    private void profesionalCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_profesionalCBActionPerformed
        if (profesionalCB.getSelectedIndex() !=0){
            JTable auxTable = IngresoManager.getInstance().getTurnosByProfesionalTable(profesionales.get(profesionalCB.getSelectedIndex()-1));
            jTable1.setModel(auxTable.getModel());
            this.removeColumn();
            this.repaint();
            this.revalidate();
        }
    }//GEN-LAST:event_profesionalCBActionPerformed

    private void confirmarButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_confirmarButtonMouseExited
       confirmarButton.setBackground(new Color (223, 246, 255) );
    }//GEN-LAST:event_confirmarButtonMouseExited

    private void confirmarButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_confirmarButtonMouseEntered
        confirmarButton.setOpaque(true);
        confirmarButton.setBackground(new Color (152, 251, 152));
    }//GEN-LAST:event_confirmarButtonMouseEntered

    private void removeColumn(){
        DefaultTableColumnModel tcm = (DefaultTableColumnModel)jTable1.getColumnModel();
        idsTurnos = tcm.getColumn(5);
        tcm.removeColumn(tcm.getColumn(5));
    }



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel confirmarButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JComboBox<String> profesionalCB;
    // End of variables declaration//GEN-END:variables
}
